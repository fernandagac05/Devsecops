name: WebGoat 

on: 
  push:
      branches:
       - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3

      - name: "Instalacion de Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "Compilacion"    
        run: ./mvnw clean install

      - name: "Verificar paquete"
        run: ls -ltra target

      - name: "Crear imagen de Docker"
        run: docker build -t webgoat ./

      - name: "Verificar imagen"
        run: docker images 

      - name: "Configurar las credenciales AWS"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: "Cargar imagen a ECR"
        run: |
              aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/n3j7o1e0
              docker build -t fernandagarcia .
              docker tag fernandagarcia:latest public.ecr.aws/n3j7o1e0/fernandagarcia:latest
              docker push public.ecr.aws/n3j7o1e0/fernandagarcia:latest

      - name: "Aprovisionar terraform"
        run: |
              terraform -chdir=terraform/ init
              terraform -chdir=terraform/ validate
              terraform -chdir=terraform/ plan -out tfplan
              terraform -chdir=terraform/ apply tfplan

      - name: "Ejecutar ansible"
        env:
          PRIVATE_KEY: ${{ secrets.PEM_SECRET }}
        run: |
              sudo apt update
              sudo apt install -y ansible
              cd ansible/
              echo "$PEM_SECRET" >> $HOME/key.pem
              sudo chmod 600 $HOME/key.pem
              var_IP=$(terraform -chdir=../terraform/ output | grep "My_ip =" | tail -1 | cut -d '"' -f 2)
              sed -i "s/INSTANCIA/$var_IP/" inventario
              export ANSIBLE_HOST_KEY_CHECKING=False
              sudo ansible-playbook -i inventario server.yaml --become
        continue-on-error: true

      - name: "Descargar arachni"
        run: |
              wget https://github.com/Arachni/arachni/releases/download/v1.6.1.3/arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
              tar -xvf arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
        continue-on-error: true

      - name: "Ejecutar arachni"
        run: |
              var_IP=$(terraform -chdir=terraform/ output | grep "My_ip =" | tail -1 | cut -d '"' -f 2)
              ./arachni-1.6.1.3-0.6.1.1/bin/arachni --check=* http://$var_IP:8080/WebGoat/login
        continue-on-error: true

      - name: "Tirar infra"
        run: |
              cd terraform/ 
              terraform plan -destroy -out tfplan
              terraform apply tfplan
      


 

  